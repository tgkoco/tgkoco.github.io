<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博文 on TG zl</title>
    <link>https://tgkoco.github.io/tags/%E5%8D%9A%E6%96%87/</link>
    <description>Recent content in 博文 on TG zl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 21 Oct 2019 15:21:11 +0800</lastBuildDate>
    
	<atom:link href="https://tgkoco.github.io/tags/%E5%8D%9A%E6%96%87/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Centos制作本地源</title>
      <link>https://tgkoco.github.io/2019/shcentos%E5%88%B6%E4%BD%9C%E6%9C%AC%E5%9C%B0%E6%BA%90/</link>
      <pubDate>Mon, 21 Oct 2019 15:21:11 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/shcentos%E5%88%B6%E4%BD%9C%E6%9C%AC%E5%9C%B0%E6%BA%90/</guid>
      <description>&lt;h2 id=&#34;制作本地源&#34;&gt;制作本地源&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Centos常见的坑</title>
      <link>https://tgkoco.github.io/2019/shcentos%E9%98%B2%E7%81%AB%E5%A2%99/</link>
      <pubDate>Mon, 21 Oct 2019 15:04:50 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/shcentos%E9%98%B2%E7%81%AB%E5%A2%99/</guid>
      <description>防火墙，hostname，时间同步，下载稳定软件包 防火墙 1.关闭防火墙 systemctl stop firewalld.service 2.禁止开机启动 systemctl disable firewalld.service 关闭 SElinux 1.关闭SElinux setenforce 0 2.禁止开机启动 vi /etc/selinux/config 将 SELINUX 值设置为 disabled 更改Hostname 1.查看当前的hostname hostname 3.更改hostname vi /etc/hostname 修改为自己喜欢的名字 4.重启 reboot 时间同步 1.检查时区 timedatectl status 如不是上海时区， 设置系统时区为上海 命令: timedatectl set-timezone Asia/Shanghai 2.安装 NTP 服务 yum install -y ntpdate ntp 注： ntpd 服务不启动 3.修改/etc/sysconfig/ntpdate让ntpdate每次同步时间之后把时间写入hwclock,相当于命令hwclock -w 将最后一行SYNC_HWCLOCK=no修改为：SYNC_HWCLOCK=yes 4.设置 NTP 同步 ntpdate ntp7.aliyun.com 注：IP 地址按实际配置 5.设置定时任务，每小时同步一次 crontab -e 0 * * * * ntpdate ntp7.</description>
    </item>
    
    <item>
      <title>Centos网卡问题</title>
      <link>https://tgkoco.github.io/2019/shcentos%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 21 Oct 2019 14:47:03 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/shcentos%E7%BD%91%E5%8D%A1%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h1 id=&#34;centos7网卡&#34;&gt;Centos7网卡&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>界面化shell</title>
      <link>https://tgkoco.github.io/2019/sy%E7%95%8C%E9%9D%A2%E5%8C%96shell/</link>
      <pubDate>Mon, 21 Oct 2019 14:31:50 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/sy%E7%95%8C%E9%9D%A2%E5%8C%96shell/</guid>
      <description>&lt;h1 id=&#34;whiptail指令&#34;&gt;whiptail指令&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Go语言内建函数</title>
      <link>https://tgkoco.github.io/2019/bcgo%E8%AF%AD%E8%A8%80%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 19 Sep 2019 23:07:31 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/bcgo%E8%AF%AD%E8%A8%80%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;golang的内建函数&#34;&gt;Golang的内建函数&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Golang学习路线推荐</title>
      <link>https://tgkoco.github.io/2019/sygolang%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Thu, 19 Sep 2019 20:26:30 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/sygolang%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E6%8E%A8%E8%8D%90/</guid>
      <description>&lt;h3 id=&#34;golang的推荐学习路线&#34;&gt;golang的推荐学习路线&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Dockerfile解析</title>
      <link>https://tgkoco.github.io/2019/bcdockerfilre%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 17 Sep 2019 11:36:01 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/bcdockerfilre%E8%A7%A3%E6%9E%90/</guid>
      <description> Docker image==&amp;gt;dockerfile(构建image的构建文件,是一系列命令和参数的脚本)
DockerFile file的组成 1.每个指令必须大写,至少有一个参数
2.指令按照从大到小的顺序执行
3.每条指令会创建一个镜像层,并对镜像进行提交.
file的命令解析  FROM 基于的镜像名称,从&amp;hellip; 祖先镜像baseimage(stratch镜像)元素卷,原镜像 MAINTAINER 作者加邮箱 作者 RUN 容器构建时,需要执行的命令,额外的命令,执行 执行shell命令,添加用户或者用户组,,安装软件,调试信息输出 EXPOSE 当前容器对外暴露的端口号,输出端口 直接跟 端口号 WORKDIR 制定在创建容器后,终端默认的登陆的进来的工作目录,一个落脚点,工作目录 直接跟工作目录 路径 ENV 构建的镜像中的设置环境变量 变量 值,可以配合workdir使用$变量 ADD 拷贝文件并解压到容器中,添加本地文件到容器并解压
 COPY 拷贝文件到容器中
 VOLUME 数据卷的集合[,]
 ENTRYPOINT 指定容器启动时运行的命令,会追加命令
 ONBUILD 当构建一个被继承的DockerFile时运行命令,父镜像会被子继承后父镜像的onbuild被触发 子景象继承之后,收尾命令 LABEL 标签说明 name=&amp;ldquo;&amp;rdquo; vendor=&amp;ldquo;&amp;rdquo; license=&amp;ldquo;&amp;rdquo; build-data=&amp;ldquo;日期&amp;rdquo; CMD 制定容器启动时执行的shell命令[&amp;ldquo;/bin/bash&amp;rdquo;],但是只有最后一个cmd命令执行 一种shell格式的命令CMD&amp;lt;&amp;gt;,一种exec格式的CMD [&amp;ldquo;&amp;rdquo;,&amp;ldquo;&amp;rdquo;] # 注释信息
 \ 一行不够写,换行
 / 信息结束
 |  运行使用 docker build -f DockerFile -t 别名 url 使用dockerfile创建容器 使用 docker run 镜像名称 使用dockerfile创建的镜像文件</description>
    </item>
    
    <item>
      <title>Docker常用指令</title>
      <link>https://tgkoco.github.io/2019/bcdocker%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Tue, 17 Sep 2019 10:40:41 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/bcdocker%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid>
      <description>&lt;h1 id=&#34;容器的基本使用命令&#34;&gt;容器的基本使用命令&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Gitignore的使用</title>
      <link>https://tgkoco.github.io/2019/sygit_ignore%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 07 Sep 2019 20:03:40 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/sygit_ignore%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;.gitignore的作用和基本用法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitemoji的图标</title>
      <link>https://tgkoco.github.io/2019/sygitemoji%E7%9A%84%E5%9B%BE%E6%A0%87/</link>
      <pubDate>Sat, 07 Sep 2019 10:46:38 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/sygitemoji%E7%9A%84%E5%9B%BE%E6%A0%87/</guid>
      <description>&lt;p&gt;gitmoji的使用方式和一些官方的moji的解释&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言学习资料与社区索引</title>
      <link>https://tgkoco.github.io/2019/shunknwon%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</link>
      <pubDate>Sat, 07 Sep 2019 01:50:38 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/shunknwon%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</guid>
      <description>无闻的学习路线推荐  Go 语言学习资料与社区索引
 鉴于之前有人做的 索引资料 已经过期超过 ~2~3 年，所以特开此坑。各位同学可以通过发起 Fork + Pull Request 的方式进行补充和更新。
最后更新时间：2018 年 05 月 29 日
交流社区 中文社区  Golang 中国：国内较早的 Go 社区，汇聚各类信息与服务 Study Golang：国内 Go 社区先驱，同样汇聚各类信息与服务 Revel 交流论坛：Revel 框架的中文社区 GoCN Forum：Go 语言爱好者中文交流论坛 QQ 群：  Go Web 交流群：259316004 Golang 中国：211938256 Go 内部实现与标准库：192706294 Go 编程语言：102319854 Martini&amp;amp;Macaron 交流群：371440803 Golang 新手群：369793160   英文社区  Go Forum：Go 语言爱好者英文交流论坛 golang-nuts 邮件列表：Go 语言官方指定邮件列表讨论区 Go+ 社区：Go 语言官方指定 G+ 社区  知识图谱  Go Knowledge Graph：Go 知识图谱  网址导航  官方：  Go 中国站点: Go 语言中国官方站点(无需翻墙) Playground：Go 语言代码在线运行  国内镜像：  Go 指南国内镜像 Go 语言国内下载镜像 Go 官方网站国内镜像  Web 框架：  Macaron：模块化 Web 框架 Beego：重量级 Web 框架 Revel：较早成熟的重量级 Web 框架 Martini: 一个强大为了编写模块化 Web 应用而生的 Go 语言框架 Echo: 功能模块齐全, 上手容易, 文档示例齐全 Gin：轻量级 HTTP Web 框架  ORM 以及数据库驱动：  xorm：支持 MySQL、PostgreSQL、SQLite3 以及 MsSQL mgo：MongoDB 官方推荐驱动 gorm: 全功能 ORM (无限接近) 支持 MySQL、PostgreSQL、SQLite3 以及 MsSQL  辅助站点：  Go Walker：Go 语言在线 API 文档 gobuild.</description>
    </item>
    
    <item>
      <title>Mod的使用</title>
      <link>https://tgkoco.github.io/2019/bcgomod%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 06 Sep 2019 18:11:21 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/bcgomod%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;gomod环境的配置和简单使用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[模板]模板样式信息</title>
      <link>https://tgkoco.github.io/2019/nh%E6%A8%A1%E6%9D%BF%E6%A0%B7%E5%BC%8F%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Fri, 06 Sep 2019 10:47:38 +0800</pubDate>
      
      <guid>https://tgkoco.github.io/2019/nh%E6%A8%A1%E6%9D%BF%E6%A0%B7%E5%BC%8F%E4%BF%A1%E6%81%AF/</guid>
      <description>&lt;p&gt;内容摘要信息&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>